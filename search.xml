<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Tommrow_is_another_day]]></title>
    <url>%2F2019%2F01%2F13%2FTommrow-is-another-day%2F</url>
    <content type="text"><![CDATA[三十我想了想最妥當的與之相對叫做“克己復禮”。哈哈哈這不恰當程度僅次於“美滿幸福”對“鰥寡孤獨”。要怎樣才能當一個理想的青年，也許理想只是理想吧。Idealisation……道真的不遠人？I don’t think so. 可以放一下洛天依《六兆年的棄坑大法》，奮力一搏后還是魯蛇模樣。昨日與李倩卿洽談，她還真是耶穌基督的好門徒、，她試圖幫我解開心結。比如寫日志是看起來很充實的事情，但不能得救，只能裝得煞有介事。要接納生命中的自相矛盾和不完美，何其艱難？她說十年後可以坐下來再聊聊，看看活明白沒有。 四十其實我前二十九篇都是編的，我根本不會法文；生活也不豐富多彩；我昨晚沒有跟阿林去中環百子裏看《阿拉姜色》，我也沒有影前影后喝邀請方獨家釀造的紅酒，也沒有跟她有説有笑更沒有今天早上神清氣爽地打網球。也沒有見過譚盾，徐童和邱炯炯那樣有趣的人。一切都是我意淫出來的，越得不到的東西越想炫耀呢。就像網傳三毛未曾擁有荷西，一切都是幻象，她實爲被丈夫家暴的可憐婦女。如果我承認我的生活跟常人一樣乏善可陳，是否衛道士（Moral Entrepreneur )就能放過我呢？我原以爲可以在這三十篇中暢所欲言就算不寫殺人放火也可以寫寫奸淫擄掠，最後我就只能借觀察社會之名寫下不痛不癢的詞句。]]></content>
  </entry>
  <entry>
    <title><![CDATA[配置ssh将本地仓库提交到github仓库]]></title>
    <url>%2F2018%2F08%2F13%2F%E9%85%8D%E7%BD%AEssh%E5%B0%86%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93%E6%8F%90%E4%BA%A4%E5%88%B0github%E4%BB%93%E5%BA%93%2F</url>
    <content type="text"><![CDATA[配置ssh配置账号和密码12$ git config --global user.name "myUsername" //配置你的账户名字$ git config --global user.email "myEmail" //配置你的创建github账户的邮箱 配置完成后，可通过以下命令查看配置的结果12$ git config user.name$ git config user.email 显示结果 myUserNamemyEmail 生成ssh文件使用git bash控制台，输入以下指令：1$ ssh-keygen -t rsa -C "myEmail" 注：myEmail输入你实例的github邮箱！！！创建完成之后，显示以下信息。提示你输入文件名，如果你在本机有多个ssh，则输入你指定的名称，若为空，则使用默认名称id_rsa Generating public/private rsa key pair.Enter file in which to save the key (/c/Users/wa02827/.ssh/id_rsa): 创建完成后，我们在个人用户目录c/Users/wa02827(当前登录名，不同用户会有不同的文件夹)/.ssh下看到id_rsa(私钥)和id_rsa.pub(公钥)两个文件。 在github上配置公钥使用记事本打开你要上传的公钥（本例：id_rsa.pub)，内容如下： ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC5Ez0jbSECncu+SzUDjc/JIzwco9hVg62kYcCIocpYnazn98pK5/fI1wJ/M8nogDwIjX9/u74qSLLojGNhAwuwuEEDjGUS8R6kR+Hn9tlUsLoARyJIfSiy9PUSqQX5RwowN9q0QAuDipGVZVnOzHLIdNccaJ06zTgWPxv+JyrB+Bu6GuXujlDvKWGE6gUpTE4fFA6rQp+KCRAdE1cboxiGSLo2xZ5xSiATK6gw61N1J2LeFAsecH8CSYKltPTYwIPfA2e7a/+U916ZRlQXKiKLCDmfdHCzL4h0g6BAMK304/k81k7DAVNCRLcIiNyP7KAvNJFXlq08e+984DkiwrMt 在github上，Settings-&gt;SSH and GPG keys点击New SSH Key按钮，将id_rsa.pub公钥数据复制到Key文本框，保存完成。 修改配置文件（单机器多个ssh重点）检查用户/.ssh目录下，是否有config文件，若是没有，新建名称为config的文件(注：该文件没有文件类型后缀)。 编辑文件，添加以下内容： ##别名，github默认为：github.comHost github_wu.com ##数组名称HostName github.com ##账号User gitPreferredAuthentications publickey ##指定私钥文件，默认为~/.ssh/id_rsaIdentityFile ~/.ssh/id_rsa.wu ~/.ssh/id_rsa.wu为生成ssh时，个人指定的文件路径，默认名称为~/.ssh/id_rsa。 测试ssh使用一下命名，测试ssh是否可用1$ ssh -T -V git@github_wu.com 成功显示如下： Hi tangname! You’ve successfully authenticated, but GitHub does not provide shell access. 实际使用的时候，例如Clone仓库，这可以使用以下命令1$ git clone git@github_wu.com:tangname/myblog.git 默认为 git@github.com:tangname/myblog.git 以上信息中，tangname为个人的github用户名，myblog.git为仓库名称。 配置本地仓库和远程仓库关联若是直接通过git clone命令获取远程仓库，默认会添加关联。这里给出本地仓库先创建，而远程仓库还是空的时候，如何将本地仓库关联到远程仓库。 此处省略在github创建仓库步骤。 若远程仓库有文件(readme.md等)，首选获取远程仓库，命令如下：注：若是远程仓库为空，该步可以省略1$ git pull 然后将获取的文件提交到本地仓库12$ git add *$ git commit -m '提示消息' 添加关联1$ git remote add origin git@github.com:tangname/myblog.git 注：若是ssh配置了别名，则按配置的别名使用，例如使用 一、4、修改配置文件的配置，则命令如下：1$ git remote add origin git@github_wu.com:tangname/myblog.git 查看已配置的远程仓库1$ git remote 列表显示origin，表明该远程仓库已经关联成功。 然后执行命令，将本地仓库推送到远程仓库:1$ git push origin master 其中，origin为远程仓库别名，master为远程仓库中的分支名称。 至此，所有步骤完成。]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>ssh</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何使用hexo搭建博客]]></title>
    <url>%2F2018%2F07%2F27%2F%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 安装前提在安装 hexo 前，您必须检查电脑中是否已安装下列应用程序： nodejs git 项目安装本教程环境为win10，程序安装完成后，使用管理员权限打开控制台，使用npm完成对hexo的安装1$ npm install -g hexo-cli 安装完成后，新建空的项目文件夹，cd到该目录下后，对hexo初始化项目1$ hexo init 安装完成后，使用以下命令生成新的博客，生成的博客在\source\_posts目录下。1$ hexo new "mysirtblog" 然后清空缓，然后存生成静态文件123$ hexo clean$ hexo generate 启动服务，预览效果1$ hexo server 运行后如下图所示 注：hexo默认使用4000端口，如果该端口已被其他程序占用（例如福昕pdf），会运行失败。可以指定端口运行:1$ hexo server -p 5000 至此 hexo 全部安装完成。 Next 博客模板接下来我们安装 Next 模板，该模板是一套非常简洁的博客模板，你也可以选择其他喜欢的模板安装。 安装Next模板通过git下载模板，你也可以直接在git上下载该模板的zip包，然后解压到站点的themes目录下。 1$ git clone https://github.com/theme-next/hexo-theme-next.git themes/next 下载完成后，cd到themes/next目录，初始化next的依赖包1$ npm install 启用主题打开站点配置文件（根目录的_config.yml)，找到 theme 字段，并将其值更改为 next。 theme: next 关于next更多的操作，可见官网。 Hexo 常用命令123456789$ hexo new "mysirtblog" *//新建博客*$ hexo clean //清空缓存数据$ hexo generate //生成博客静态文件$ hexo server -p 5000 //运行博客站点，若不制定端口 -p 5000 ，则默认使用http://localhost:4000端口$ hexo deploy //发布站点]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
      </tags>
  </entry>
</search>
